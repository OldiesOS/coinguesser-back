apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: nodejs-service
  name: nodejs-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: nodejs-service
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: nodejs-service
    spec:
      containers:
        - args:
            - wait-for-it
            - mysql-service:3306
            - --
            - npm
            - start
          env:
            - name: DB_HOST
              value: mysql-service
            - name: DB_NAME
              value: db
            - name: DB_PASSWORD
              value: "1234"
            - name: DB_USER
              value: admin
          image: minkui1826/nodejs-service:latest
          name: nodejs-container
          ports:
            - containerPort: 3000
              protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: nodejs-service
  name: nodejs-service
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: nodejs-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mysql-service
  name: mysql-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mysql-service
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mysql-service
    spec:
      containers:
        - env:
            - name: MYSQL_DATABASE
              value: db
            - name: MYSQL_PASSWORD
              value: "1234"
            - name: MYSQL_ROOT_PASSWORD
              value: "1234"
            - name: MYSQL_USER
              value: admin
          image: mysql:latest
          livenessProbe:
            exec:
              command:
                - mysqladmin
                - ping
                - -h
                - localhost
            failureThreshold: 10
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          name: mysql-container
          volumeMounts:
            - mountPath: /docker-entrypoint-initdb.d/init.sql
              name: mysql-service
              subPath: init.sql
      restartPolicy: Always
      volumes:
        - configMap:
            items:
              - key: init.sql
                path: init.sql
            name: mysql-service
          name: mysql-service

---
apiVersion: v1
data:
  init.sql: |+
    CREATE DATABASE IF NOT EXISTS db;

    USE db;

    -- 유저 생성
    CREATE USER IF NOT EXISTS 'admin'@'%' IDENTIFIED BY '1234';

    -- 권한 부여
    GRANT ALL PRIVILEGES ON db.* TO 'admin'@'%';

    -- 변경사항 적용
    FLUSH PRIVILEGES;

    CREATE TABLE IF NOT EXISTS coin_data (
        id INT AUTO_INCREMENT PRIMARY KEY,
        coin VARCHAR(10) NOT NULL,
        _time TIME NOT NULL,
        real_value DECIMAL(10,4),
        predicted_value DECIMAL(10,4) NOT NULL
    );

    CREATE TABLE IF NOT EXISTS mobile_data (
        id INT AUTO_INCREMENT PRIMARY KEY,
        coin VARCHAR(10) NOT NULL,
        _time TIME NOT NULL,
        volume DECIMAL(10,2),
        increase_rate DECIMAL(10,5),
        updown VARCHAR(10)
    );


kind: ConfigMap
metadata:
  annotations:
    use-subpath: "true"
  labels:
    io.kompose.service: mysql-service
  name: mysql-service

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: fastapi-service
  name: fastapi-service
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: fastapi-service
  template:
    metadata:
      annotations:
        kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: fastapi-service
    spec:
      containers:
        - env:
            - name: FASTAPI_ENV
              value: production
          image: minkui1826/fastapi-service:latest
          livenessProbe:
            exec:
              command:
                - curl
                - -f
                - http://0.0.0.0:8000/health
            failureThreshold: 5
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 5
          name: fastapi-container
          ports:
            - containerPort: 8000
              protocol: TCP
      restartPolicy: Always

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\ProgramData\chocolatey\lib\kubernetes-kompose\tools\kompose.exe convert
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: fastapi-service
  name: fastapi-service
spec:
  ports:
    - name: "8000"
      port: 8000
      targetPort: 8000
  selector:
    io.kompose.service: fastapi-service
